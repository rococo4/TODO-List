apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: app
          image: rococo4/todo_list:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: database_value
            - name: PORT
              value: "8080"
            - name: LOKI_URL
              value: "http://loki:3100"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
      initContainers:
        - name: migrate
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: database_url
          image: migrate/migrate:latest
          command:
            - "sh"
            - "-c"
            - "migrate -path /migrations -database $DATABASE_URL up"
          volumeMounts:
            - name: migration-files
              mountPath: /migrations
      volumes:
        - name: migration-files
          configMap:
            name: db-migration-files
      restartPolicy: Always